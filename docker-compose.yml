version: '3.1'

services:
    location:
        image: piggy1/location:latest
        container_name: piggyback-dev-runner_location_1
        restart: always
        volumes:
        - ./gcp-secret-vol:/app/config
        ports:
         - "8080:8080"
        links:
        - piggyback-dev-runner_mongo_1
    offers:
        image: piggy1/offers:latest
        container_name: piggyback-dev-runner_offers_1
        restart: always
        volumes:
        - ./gcp-secret-vol:/app/config
        ports:
         - "8081:8081"
    events:
        image: piggy1/events:latest
        container_name: piggyback-dev-runner_events_1
        restart: always
        volumes:
        - ./gcp-secret-vol:/app/config
        ports:
         - "8082:8082"
        links:
        - piggyback-dev-runner_mongo_1
    user:
        image: piggy1/user:latest
        container_name: piggyback-dev-runner_user_1
        restart: always
        volumes:
        - ./gcp-secret-vol:/app/config
        ports:
         - "8083:8083"
        links:
        - piggyback-dev-runner_mysql_1
    invoice:
        image: piggy1/invoice:latest
        container_name: piggyback-dev-runner_invoice_1
        restart: always
        ports:
         - "8084:8084"
        links:
        - piggyback-dev-runner_mysql_1
    partner:
        image: piggy1/partner:latest
        container_name: piggyback-dev-runner_partner_1
        restart: always
        volumes:
        - ./gcp-secret-vol:/app/config
        ports:
         - "8085:8085"
        links:
        - piggyback-dev-runner_mongo_1
    notification:
        image: piggy1/notification:latest
        container_name: piggyback-dev-runner_notification_1
        restart: always
        volumes:
        - ./gcp-secret-vol:/app/config
        ports:
         - "8086:8086"
    portal:
        image: piggy1/portal:latest
        container_name: piggyback-dev-runner_portal_1
        restart: always
        ports:
         - "5000:5000"
    mongo:
        image: mongo:latest
        container_name: piggyback-dev-runner_mongo_1
        restart: always
        volumes: 
        - mongo-data-vol:/data/db
        - mongo-init-vol:/docker-entrypoint-initdb.d
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    mongo-express:
        image: mongo-express:latest
        container_name: piggyback-dev-runner_mongo-express_1
        restart: always
        ports:
        - "8001:8081"
        environment:
          ME_CONFIG_MONGODB_ADMINUSERNAME: root
          ME_CONFIG_MONGODB_ADMINPASSWORD: example
    mysql:
        image: mysql:latest
        container_name: piggyback-dev-runner_mysql_1
        restart: always
        volumes: 
        - ./mysql-data-vol:/var/lib/mysql
        - ./mysql-init-vol:/docker-entrypoint-initdb.d
        environment:
          MYSQL_ROOT_PASSWORD: 'password'
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: piggyback-dev-runner_phpmyadmin_1
        environment:
        - PMA_ARBITRARY=1
        restart: always
        ports:
        - "8000:80"
volumes:
    mysql-data-vol:
    mysql-init-vol:
    mongo-data-vol:
    mongo-init-vol:
    gcp-secret-vol: