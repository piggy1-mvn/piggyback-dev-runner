apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: broker
  namespace: production
spec:
  replicas: 1
  progressDeadlineSeconds: 10
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
      - env:
        - name: CONFLUENT_METRICS_ENABLE
          value: "true"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: broker:29092
        - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
          value: "1"
        - name: CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: CONFLUENT_SUPPORT_CUSTOMER_ID
          value: anonymous
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_METRIC_REPORTERS
          value: io.confluent.metrics.reporter.ConfluentMetricsReporter
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        image: confluentinc/cp-enterprise-kafka:5.3.1
        name: broker
        ports:
        - containerPort: 29092
        - containerPort: 9092
#        volumeMounts:
#        - name: kafka-data-vol
#          mountPath: /var/lib/kafka/data
        resources:
          limits:
            memory: "2Gi"
            cpu: "750m"
        imagePullPolicy: Always
#        command:
#        - sh
#        - -c
#        - "exec kafka-server-start /etc/kafka/server.properties \
#           --override log.dirs=/var/lib/kafka \
#          "
#      volumes:
#      - name: kafka-data-vol
#        persistentVolumeClaim:
#          claimName: kafka-data-vol-claim
#          readOnly: false
status: {}
